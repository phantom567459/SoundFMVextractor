Imports System.Windows.Forms

Public Class UpdateSampleRatesForm
    Protected Overrides Sub OnLoad(e As EventArgs)
        MyBase.OnLoad(e)
        btnBrowseSoundFolder.Tag = textFolderName
        btnBrowseSfx.Tag = textSfxFileName
        Dim tip As ToolTip = New ToolTip()
        tip.SetToolTip(textFolderName, "Drag folder or browse to folder with '...' button")
        tip.SetToolTip(textSfxFileName, "Drag file or browse to file with '...' button")
    End Sub
    Private Sub textFilename_DragDrop(sender As Object, e As Windows.Forms.DragEventArgs) Handles textFolderName.DragDrop, textSfxFileName.DragDrop
        Dim tb As Control = sender
        Dim files As String() = e.Data.GetData(DataFormats.FileDrop)
        If files IsNot Nothing And files.Length = 1 And tb IsNot Nothing Then
            tb.Text = files(0)
        End If
    End Sub

    Private Sub textFilename_DragOver(sender As Object, e As Windows.Forms.DragEventArgs) Handles textFolderName.DragOver, textSfxFileName.DragOver
        If e.Data.GetDataPresent(DataFormats.FileDrop) Then
            e.Effect = DragDropEffects.Copy
        Else
            e.Effect = DragDropEffects.None
        End If
    End Sub
    Private Sub btnBrowseSfx_Click(sender As Object, e As EventArgs) Handles btnBrowseSfx.Click
        Dim button As Button = sender
        Dim textBox As TextBox = button.Tag
        Dim dlg As OpenFileDialog = New OpenFileDialog()
        dlg.RestoreDirectory = True
        If dlg.ShowDialog() = DialogResult.OK Then
            textBox.Text = dlg.FileName
        End If
        dlg.Dispose()
    End Sub
    Private Sub btnBrowseSoundFolder_Click(sender As Object, e As EventArgs) Handles btnBrowseSoundFolder.Click
        Dim button As Button = sender
        Dim textBox As TextBox = button.Tag
        Dim dlg As FolderBrowserDialog = New FolderBrowserDialog()
        If dlg.ShowDialog() = DialogResult.OK Then
            textBox.Text = dlg.SelectedPath
        End If
        dlg.Dispose()
    End Sub

    Private Sub btnUpdateRates_Click(sender As Object, e As EventArgs) Handles btnUpdateRates.Click
        If textSfxFileName.Text.Length > 0 And textFolderName.Text.Length > 0 Then
            Console.WriteLine("  SoundRipperVB.exe -i {0} -applySampleRate {1} ", textSfxFileName.Text, textFolderName.Text)
            Dim rates As Dictionary(Of String, SampleRateMapping) = New Dictionary(Of String, SampleRateMapping)
            SampleRateHelper.GetSampleRates(textSfxFileName.Text, rates)
            SampleRateHelper.ApplySampleRatesToFiles(textFolderName.Text, rates, checkSfx.Checked, checkStm.Checked)
        Else
            MessageBox.Show("Please specify a Sound folder to update and a .sfx/.stm file to get rates from")
        End If
    End Sub

    Private Sub ExitToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles ExitToolStripMenuItem.Click
        Close()
    End Sub

    Private Sub CommandLineUsageToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles CommandLineUsageToolStripMenuItem.Click
        Dim message As String =
"To use this feature from the command line do the following:
cmd> SoundRipperVB.exe -i mySpecialFile.sfx  -applySampleRate path\to\file\or\folder"


        Console.WriteLine("Usage:")
        Console.WriteLine("  SoundRipperVB.exe -i dag.sfx -applySampleRate ..\Sound\worlds\dag\dag1cw.sfx " & vbCrLf)
        Console.WriteLine("Or to apply to a directory:")
        Console.WriteLine("  SoundRipperVB.exe -i dag.sfx -applySampleRate ..\Sound" & vbCrLf)
        MessageBox.Show(message)
    End Sub

    Private Sub UsageToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles UsageToolStripMenuItem.Click
        Dim message =
"This feature is used to update the .sfx and .stm 
sound files in your target Sound folder to the 
sample rates specified in a given .sfx or .stm file.
The given .sfx/.stm files are generated by the 'rip'
process on the previous dialog (or by command line usage).
"
        MessageBox.Show(message)
    End Sub
End Class