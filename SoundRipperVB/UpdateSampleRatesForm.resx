<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAEACABoBQAANgAAACAgAAABAAgAqAgAAJ4FAAAwMAAAAQAIAKgOAABGDgAAKAAAABAA
        AAAgAAAAAQAIAAAAAAAAAQAAww4AAMMOAAAAAQAAAAEAAM6mWwDOplwAuW8AALlwAAC9eAQAvXcCALx1
        AAC8dgAAu3EAAMWMKgDDhyEAu3IAALx2AQC9eQcAzKFSAMiXQAC6cQAAvXgFAL15BgC5cgMAyZhBAMWP
        LwDGlT8Aw44yAMqaQwDEjCsAunQEALx1AQC/gBMAx5pDAM6pYADHm0kAxI4xAMWSNwDInU0AzKZaAMaX
        PgC/fxIAvXkPAMKKKADJmUIAyZpEAL16EAC8dwQAw4kkAL99EADBhBsAwYMaAP///wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEBAQEBAQEBAQEBAQEBAgICAgIC
        AgICAgICAgICAwQEBAQEBAQEBAQEBAQEBAQFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBgcGBgUFBQUFBQUF
        BQUFECwtLi8IBQUFBQUFBQUGDSYjJygpKisHBQUFBQUbHB0eHyAhIiMkJRsFBQUFDBITFBUWFxgZGhEF
        BQUFBQUMBw0DDg8QEQcMBQUFBQUFBQUFCAkKCwUFBQUFBQUFBQUFBQUGBwUFBQUFBQUFBQUFBQUFBQUF
        BQUFBQUFBAQEBAQEBAQEBAQEBAQEBAICAgICAgICAgICAgICAgMAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgA
        AAAgAAAAQAAAAAEACAAAAAAAAAQAAMMOAADDDgAAAAEAAAABAADp3r4A6d++ALR0BQC1dAUAvncAAL53
        AQC8dwIAvXcCALx2AQC9dgMAvXgDALpxAADEkDQAw4YfALtzAAC+eQQAtWsAANm5eQDLnk0AuG0AAL14
        BAC8dQAAtW8AAOPOlwDSrmsAt20AAL12AQC8dQEAu3wPAL16CAC8fxgA07l9AM+taQC6dAIAvnwRALx3
        BgC+eAQAv3oGALZtAADWs24Ax5Y+ALVoAADJlTsAyaBYAM6rXwC9gBgA3b18AMOKKgC6cgEAvngGALlx
        AAC3bgAAuG4AALVwAgDkz5sA0q5qALJkAADPqVoAv4swAM+jVgDEjS0AtXIFAOXTowDMpFkAtmsAALdv
        AAC7dAAAyZo/AMysYADMpVMAxZVDAMyoZADRrmcAtXMIANWybAC7ew8Ax5lEAMeXPwDDjC4Ay6djAM6p
        XwC8hysA0K5eAMyrXgDHlTgAwIUcAMCIJADDlD8A7N6yALqBIQDPplcAwpE5ANOvaAC3cQAAxIwqAMmj
        WADLpVoAvoQjAMykWADg0J8AwYonAMCCGQC2bgAAx5U5ALp1AwDDjjAAz7d9AMukVwC/fQ8A07R1ANKz
        cgC5dAQAwIUeAMOLKQC3awAAunIAALx2AAC4dQYA5teuAMqbSQC1bgAA3sWPANi1cQC1bAAAvXYAANi5
        dQDCjTAA1K5lALlvAADBghYAvHoLAMCBFwDp378A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAISEhISEhISEhISEhISEhISE
        hISEhISEhISEhISEAIQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAwQEBAQEBAQEBAQEBAQE
        BAQEBAQEBAQEBAQEBAQEBAQFBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYHBwcHBwcHBwcH
        BwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcH
        BwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcH
        BwcHBwcHBwcHBwcHBgcHBgYHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBxV0BwcVdAcHBwcHBwcHBwcH
        BwcHBwcHBwcHBwcHBwZCgYJ0QoMcFQYHGgcHBwcHBwcHBwcHBwcHBwcHBwcKJHh9fg5mf0yADwcHBwcH
        BwcHBwcHBwcHBwcHBwYHCnN0dXZ3C3h5ent8DhQGBgcHBwcHBwcHBwcHBwcHDg5mZ2hpamtBbG1ub3Bx
        cg5CBwcHBwcHBwcHBwcHBxtVVldYWVpbXF1eX2BhYmM6ZGUbBwcHBwcHBwcHBwcHQkNERUZHSElKS0xN
        Tk9QUVJTVDAHBwcHBwcHBwcHBwcHMjM0NTY3ODk6Ozw9Pj9AQTMLBwcHBwcHBwcHBwcHBwcKJCUmJygp
        KissLSYuLzAxJAoHBwcHBwcHBwcHBwcaGgcHBhscHQ4eHyAhGiIjCBoaBwcHBwcHBwcHBwcHBwcHBwcH
        BxUIChYXGBkPFQgHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBgYPEBESExQGBwcHBwcHBwcHBwcHBwcHBwcH
        BwcHBwcHBwoLDA0OBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwgJBggHBwcHBwcHBwcHBwcHBwcH
        BwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcH
        BwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcH
        BwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQFAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgMAAAABAQAAAAEAAAABAQAAAAEAAAABAQAAAAEBAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAADAA
        AABgAAAAAQAIAAAAAAAACQAAww4AAMMOAAAAAQAAAAEAAP//9wC8k0IAwplDALuLOwC4bwAAtHACALx2
        AQC+eAMAv3kEAMqZPwDEhh4As2wAANm/gwDLm0MA9OO3AMqoaQC5fhwA9u7HANvDigDezJcA3cWRALt5
        CgDAiCQA0rNzAMmkYADYvoYAw4koALl1CADfxosAxJQ6AOfMkQC2gy8A2bpxAMqeTQCzdRAA6dKYALR0
        DAD988wAunsTAOXQmQCvcg8A0adYALqFKwD//NgAx55SAMaaSQDm1aMAwY0yAOTMjQCrZAAAx5I4AM2p
        YwDizZgA4MKDAL+VSgCxZgAA5MyRALuDIwDdwnkA3b1uAOrZoACsbg0A2rRlANCuawCvbwcAtn0cAKVm
        BgDWs2UAxadqANS4dgDh0ZQA38B8AKxxFAD47cQAwI43AKtpBQDevXgAwZZJAPfyzwCyi0AA17VqAM3B
        nAC8jDQA3cqaAP374ADNo1gA6tOfANSsXAD///gA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYWFgAWFhYAAAAWFgAAAAAWFhYAAAA
        WFgAAAAAWFhYWFhYAABYWFgAAAAAAAAAAAABAQEBNgEBAQEBAQEBAQEBNgEBAQEBATYBAQEBNgEBAQEB
        AQE2AQEBAQEBAQEBAgEEBAQEBAQEBAQEBAQFBgQEBAQEBAQEBAQFBAQEBAQFBAUEBAQEBAQEBAQEBAUF
        BAUHBwcHBwcHBwcHBxUGBggGBgcHBwcHBwcHCAgGBxsHCAcHBwcGBwcHBwcIGwgICAgGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgcGBgYGBgYGBgYGBgYGCAYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBhsGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBggGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBggGBgYGBgYGBgYGBgYGBgoG
        BgYGBiYVBgYGBgYGBgYGBgYGBgYGBgYGBggGBgYGBgYGBgYGBgYGBgYGBgYHCz4QBgYGBFdSBQYGBgYG
        BgYGBgYGBgYGBgYGBgcGBgYGBgYGCAYGBgYGBgYHBgYGIg4DBAYIN1YzBAgGBgYGBgYGBgcGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYHBggESlRVBAcIPUkeCxUGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYFBggLUFFFBQgEUlM4QQYGBAYGBgYGBgYGBgYGBgYGBgcGBgYGBgYGBgYGBggICAQtDQQkOE8w
        JAgEKQ9FIQQkQyYGBwcHBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgsxC0hJEjFKOEs4KgYLTDZNOjc5Thkx
        CwsFBgYGBgYGBgYGBgYGBgYGBgYGBgYGJjo6OzwPOD0+PzE1IQRAOCpBJ0JDREVGIEc+FQYGBgYGBgYG
        BgcGBgYGBgYGBgYGFR0CAh0xNTYcLzcYIAsQNBUEOAM4OQUCAQIdGwYGBwYGBgYGBgYGBgYGBgYGBgYG
        BgQEBQUFLS4UGwUvMDEyHAQLMzQZCwgEBAUFBgYGBgYGBgYGBgYGBgYGBgYGBgYGBggICAYGJCUXCwYm
        JygpFwsFKissBAgGCAgHBgYGBgYGBgYIBgYGBgYGBgYGBgYGBgYGCAYIBBwdBAcLHh8gIQsIIiMQBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBRYVBhULFxgZGgYIBhobBgYGCAYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYLDRMUFQcGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGEBESCwcGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgcGBgYG
        Cw4PCwcGBgYGBgYGBgYGBgYGBgYGBgYGBggGBgYGBgYGBgYGBgYGBgYGBgYGBgYGCwwNBAcGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYHBAkKBQcGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBggHBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYIBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBggGBgYGBgYGBgYGBgYGBgYHBgYGBgYGBgYGBgYGBgYGBwYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBwYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYHBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgcG
        BgcGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYHBwcHBwcHBwcG
        BgcIBwcHBwcHBwgICAcGBgcHBwcHBgYIBggGBgcHBwcHBgcHCAcEBAQEBAQEBAUFBQYFBAQEBAQEBAQE
        BQUEBAQEBAQEBAQEBgUEBAQEBAQEBAQEBAUBAQEBAQEBAQECAQEDAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>